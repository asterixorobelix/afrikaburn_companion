openapi: 3.0.3
info:
  title: AfrikaBurn Companion API
  description: Backend API for AfrikaBurn Companion mobile app with offline-first smart sync
  version: 1.0.0
  contact:
    name: Nathan Stasin
    email: nathan@example.com
servers:
  - url: https://afrikaburn-companion.supabase.co/api/v1
    description: Production server (Supabase hosted)
  - url: http://localhost:8080/api/v1  
    description: Development server

paths:
  # Event Management
  /events:
    get:
      summary: Get all events (current and historical)
      operationId: getEvents
      parameters:
        - name: current_only
          in: query
          description: Return only current year event
          schema:
            type: boolean
            default: false
        - name: include_hidden
          in: query
          description: Include time-released content (requires location verification)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '500':
          $ref: '#/components/responses/ServerError'

  /events/{eventId}:
    get:
      summary: Get specific event details
      operationId: getEventById
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          $ref: '#/components/responses/NotFound'

  # Content Management
  /events/{eventId}/theme-camps:
    get:
      summary: Get theme camps for event
      operationId: getThemeCamps
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lat
          in: query
          description: User latitude for location-based unlocking
          schema:
            type: number
            format: double
        - name: lng
          in: query  
          description: User longitude for location-based unlocking
          schema:
            type: number
            format: double
      responses:
        '200':
          description: List of theme camps (filtered by location/time unlock rules)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeCamp'

  /events/{eventId}/art-installations:
    get:
      summary: Get art installations for event
      operationId: getArtInstallations
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: lat
          in: query
          description: User latitude for location-based unlocking
          schema:
            type: number
            format: double
        - name: lng
          in: query
          description: User longitude for location-based unlocking
          schema:
            type: number
            format: double
      responses:
        '200':
          description: List of art installations (filtered by unlock rules)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtInstallation'

  /events/{eventId}/mutant-vehicles:
    get:
      summary: Get mutant vehicles for event
      operationId: getMutantVehicles
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          description: Search query for name/description/tags
          schema:
            type: string
      responses:
        '200':
          description: List of mutant vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MutantVehicle'

  /events/{eventId}/performances:
    get:
      summary: Get performances and activities for event
      operationId: getPerformances
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: date
          in: query
          description: Filter by specific date
          schema:
            type: string
            format: date
        - name: category
          in: query
          description: Filter by performance category
          schema:
            type: string
      responses:
        '200':
          description: List of performances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventPerformance'

  # Smart Sync
  /sync/full:
    post:
      summary: Initiate full content sync for offline use
      operationId: syncFull
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      responses:
        '200':
          description: Sync package with prioritized content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
        '413':
          description: Requested content exceeds 2GB limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sync/incremental:
    post:
      summary: Get incremental updates since last sync
      operationId: syncIncremental
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncrementalSyncRequest'
      responses:
        '200':
          description: Incremental updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'

  # Maps and Navigation
  /events/{eventId}/maps:
    get:
      summary: Get offline map data for event
      operationId: getOfflineMaps
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Map metadata and tile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfflineMap'

  /events/{eventId}/map-pins:
    get:
      summary: Get all map pins for event
      operationId: getMapPins
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: layer
          in: query
          description: Filter by map layer
          schema:
            type: string
      responses:
        '200':
          description: List of map pins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MapPin'

  # Safety and Emergency
  /events/{eventId}/emergency-contacts:
    get:
      summary: Get emergency contacts for event
      operationId: getEmergencyContacts
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of emergency contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergencyContact'

  /events/{eventId}/resource-locations:
    get:
      summary: Get resource locations (water, ice, help stations)
      operationId: getResourceLocations
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: resource_type
          in: query
          description: Filter by resource type
          schema:
            type: string
      responses:
        '200':
          description: List of resource locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceLocation'

  # MOOP Reporting
  /events/{eventId}/moop-reports:
    post:
      summary: Submit MOOP (Matter Out of Place) report
      operationId: submitMOOPReport
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MOOPReportRequest'
      responses:
        '201':
          description: MOOP report created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MOOPReport'
        '400':
          $ref: '#/components/responses/BadRequest'

  # Weather Alerts
  /events/{eventId}/weather-alerts:
    get:
      summary: Get active weather alerts for event location
      operationId: getWeatherAlerts
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of active weather alerts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherAlert'

components:
  schemas:
    Event:
      type: object
      required:
        - id
        - year
        - start_date
        - end_date
        - center_latitude
        - center_longitude
        - theme
      properties:
        id:
          type: string
          format: uuid
        year:
          type: integer
          minimum: 2020
          maximum: 2030
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        center_latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        center_longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        radius_km:
          type: number
          format: double
          default: 5.0
        theme:
          type: string
          minLength: 1
          maxLength: 200
        is_current_year:
          type: boolean
          default: false
        last_updated:
          type: integer
          format: int64

    ThemeCamp:
      type: object
      required:
        - id
        - event_id
        - name
        - latitude
        - longitude
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          maxLength: 2000
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        contact_info:
          type: string
          maxLength: 500
        activities:
          type: array
          items:
            type: string
        amenities:
          type: array
          items:
            type: string
        qr_code:
          type: string
          maxLength: 200
        photo_url:
          type: string
          format: uri
        is_hidden:
          type: boolean
          default: false
        unlock_timestamp:
          type: integer
          format: int64
          nullable: true
        last_updated:
          type: integer
          format: int64

    ArtInstallation:
      type: object
      required:
        - id
        - event_id
        - name
        - artist_name
        - latitude
        - longitude
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        artist_name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          maxLength: 2000
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        photo_urls:
          type: array
          items:
            type: string
            format: uri
        artist_bio:
          type: string
          maxLength: 1000
        interactive_features:
          type: array
          items:
            type: string
        is_hidden:
          type: boolean
          default: false
        unlock_timestamp:
          type: integer
          format: int64
          nullable: true
        qr_code:
          type: string
          maxLength: 200
        last_updated:
          type: integer
          format: int64

    MutantVehicle:
      type: object
      required:
        - id
        - event_id
        - name
        - description
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
          maxLength: 2000
        owner_name:
          type: string
          maxLength: 200
        photo_urls:
          type: array
          items:
            type: string
            format: uri
        schedule_info:
          type: string
          maxLength: 500
        last_known_latitude:
          type: number
          format: double
          nullable: true
        last_known_longitude:
          type: number
          format: double
          nullable: true
        last_location_update:
          type: integer
          format: int64
          nullable: true
        search_tags:
          type: array
          items:
            type: string
        is_active:
          type: boolean
          default: true
        last_updated:
          type: integer
          format: int64

    EventPerformance:
      type: object
      required:
        - id
        - event_id
        - name
        - start_time
        - end_time
        - category
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          maxLength: 2000
        performer_name:
          type: string
          maxLength: 200
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        venue:
          type: string
          maxLength: 200
        category:
          type: string
          enum: [Workshop, Music, Art, Talk, Dance, Wellness, Other]
        is_hidden:
          type: boolean
          default: false
        last_updated:
          type: integer
          format: int64

    OfflineMap:
      type: object
      required:
        - id
        - event_id
        - boundary_north_lat
        - boundary_south_lat
        - boundary_east_lng
        - boundary_west_lng
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        boundary_north_lat:
          type: number
          format: double
        boundary_south_lat:
          type: number
          format: double
        boundary_east_lng:
          type: number
          format: double
        boundary_west_lng:
          type: number
          format: double
        zoom_levels:
          type: array
          items:
            type: integer
            minimum: 1
            maximum: 20
        tile_base_url:
          type: string
          format: uri
        size_bytes:
          type: integer
          format: int64
        last_updated:
          type: integer
          format: int64

    MapPin:
      type: object
      required:
        - id
        - content_type
        - content_id
        - latitude
        - longitude
        - icon_type
        - layer_id
      properties:
        id:
          type: string
          format: uuid
        content_type:
          type: string
          enum: [camp, art, facility, emergency, resource, custom]
        content_id:
          type: string
          format: uuid
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        icon_type:
          type: string
          maxLength: 50
        layer_id:
          type: string
          maxLength: 50
        is_visible:
          type: boolean
          default: true
        priority:
          type: integer
          minimum: 0
          maximum: 100

    EmergencyContact:
      type: object
      required:
        - id
        - event_id
        - name
        - contact_type
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        contact_type:
          type: string
          enum: [ranger, medical, emergency, admin]
        phone_number:
          type: string
          pattern: '^[+]?[0-9\s\-\(\)]+$'
          maxLength: 20
        radio_channel:
          type: string
          maxLength: 20
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        description:
          type: string
          maxLength: 500
        is_available_24_hours:
          type: boolean
          default: false
        operating_hours:
          type: string
          maxLength: 100
        priority:
          type: integer
          minimum: 0
          maximum: 100

    ResourceLocation:
      type: object
      required:
        - id
        - event_id
        - name
        - resource_type
        - latitude
        - longitude
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 200
        resource_type:
          type: string
          enum: [water, ice, help, medical, food, services]
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        availability:
          type: string
          enum: [available, limited, unavailable, unknown]
          default: unknown
        last_status_update:
          type: integer
          format: int64
        operating_hours:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 500
        is_verified:
          type: boolean
          default: false

    MOOPReport:
      type: object
      required:
        - id
        - latitude
        - longitude
        - description
        - severity
      properties:
        id:
          type: string
          format: uuid
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        description:
          type: string
          minLength: 1
          maxLength: 1000
        photo_url:
          type: string
          format: uri
          nullable: true
        severity:
          type: string
          enum: [low, medium, high]
        status:
          type: string
          enum: [reported, in_progress, resolved]
          default: reported
        reported_timestamp:
          type: integer
          format: int64

    MOOPReportRequest:
      type: object
      required:
        - latitude
        - longitude
        - description
        - severity
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        description:
          type: string
          minLength: 1
          maxLength: 1000
        severity:
          type: string
          enum: [low, medium, high]
        photo_base64:
          type: string
          description: Base64 encoded photo (optional)

    WeatherAlert:
      type: object
      required:
        - id
        - alert_type
        - severity
        - title
        - description
        - start_time
      properties:
        id:
          type: string
          format: uuid
        alert_type:
          type: string
          enum: [dust_storm, high_wind, extreme_heat, severe_weather]
        severity:
          type: string
          enum: [low, medium, high, extreme]
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
          maxLength: 1000
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
          default: true
        last_updated:
          type: integer
          format: int64

    SyncRequest:
      type: object
      required:
        - device_id
        - event_id
      properties:
        device_id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        max_storage_bytes:
          type: integer
          format: int64
          default: 2000000000
        priority_packages:
          type: array
          items:
            type: string
        last_sync_timestamp:
          type: integer
          format: int64
          default: 0

    IncrementalSyncRequest:
      type: object
      required:
        - device_id
        - event_id
        - last_sync_timestamp
      properties:
        device_id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        last_sync_timestamp:
          type: integer
          format: int64

    SyncResponse:
      type: object
      required:
        - sync_id
        - total_size_bytes
        - content_packages
      properties:
        sync_id:
          type: string
          format: uuid
        total_size_bytes:
          type: integer
          format: int64
        content_packages:
          type: array
          items:
            $ref: '#/components/schemas/ContentPackage'
        download_urls:
          type: object
          additionalProperties:
            type: string
            format: uri

    ContentPackage:
      type: object
      required:
        - id
        - name
        - priority
        - size_bytes
        - version
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        priority:
          type: integer
          minimum: 1
          maximum: 100
        size_bytes:
          type: integer
          format: int64
        version:
          type: integer
          minimum: 1
        expiry_date:
          type: integer
          format: int64
          nullable: true

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Bad request - invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []